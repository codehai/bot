
## Determines whether nginx should become a daemon and default is on.
daemon  off;

## If master_process is off, there will be only one nginx worker running. Only use it for debug propose.
## Default is on.
master_process  on;

## Define which OS user & group nginx worker processes will run as.
user  nginx nginx;

## Defines the number of worker processes every of which will be embedded one JVM instance.
## When auto is specified the number of worker processes will be the number of CPU hardware threads
worker_processes  auto;

error_log  error.log;

events {
	## Defines the number of connections per worker processes.
	## Note that this number includes all connections (e.g. connections with proxied servers, among others),
	## not only connections with clients.
	worker_connections  1024;
}


http {

	## include file mime.types which defines file type to mime type mappings
	include       mime.types;
	
	## Default mime type for unknown file type
	default_type  application/octet-stream;

	## access log, more details can be found from http://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
	## when do performance tests try to turn off it, viz. use `access_log off;` instead.
	access_log logs/access.log combined;

	sendfile        on;
	#tcp_nopush     on;

	keepalive_timeout  65;

	## Enable gzip,  default is off
	gzip  on;
	
	## Defines the path of JVM, when auto is used nginx-clojure will detect this by itself.
	jvm_path auto;
	
	## Define class path. When '/*' is used after a directory path all jar files and
	##sub-directories will be used as the jvm classpath
	jvm_classpath "libs/*";
	
	jvm_options '-DMY_PNO=#{pno}';
	
	### jvm heap memory
	#jvm_options "-Xms1024m";
	#jvm_options "-Xmx1024m";

	## Threads number for request handler thread pool on jvm, default is 0 which means disable
	## thread pool mode. Check more details from section 2.4 in http://nginx-clojure.github.io/configuration.html
	#jvm_workers 8;

	## shared map used by sub/pub API such as build-topic!, sub! and pub!.
	shared_map PubSubTopic tinymap?space=1m&entries=256;
	
	## for shared map based ring session store
	shared_map mySessionStore tinymap?space=1m&entries=256;
	
	jvm_handler_type 'clojure';

	jvm_init_handler_name 'clojure-web-example.handler/jvm-init-handler';

	server {
		client_max_body_size 5m;
		listen	   8001;

		location /air/hn {
			expires -1s;
			rewrite ^/air/hn/?(.*)$ /$1 break;
			proxy_pass http://m.hnair.com;
			proxy_redirect default;

			proxy_hide_header "Cache-Control";
			add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
			proxy_hide_header "Pragma";
			add_header Pragma "no-cache";
			proxy_set_header Host m.hnair.com;
			#proxy_set_header Accept-Encoding "";
			proxy_set_header Upgrade-Insecure-Requests "";
			proxy_set_header Referer http://m.hnair.com/;
			proxy_set_header Origin http://m.hnair.com/;
			#proxy_hide_header Cookie;
			#proxy_set_header Cookie "";
		}

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		} 
	}
}
